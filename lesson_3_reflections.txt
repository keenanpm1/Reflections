When would you want to create a remote repository rather than keeping all your work local?

When you are working on a single computer by yourself it makes sense to keep all the work local.  When working with a group a remote repository facilitates this.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

When working in a group you may not want other peoples changes to interfere with your work untill you are ready.


Describe the differences between forks, clones, and branches.  When would you use one instead of another?

A fork is a copy of a repository on GitHub that gives credit to the original creator.  A clone is a copy of a repository, local or on GitHub, that does not necessarily give credit to the original.  A branch is a version of the repository that is tracked along side the main or master branch for development or other logical purposes.  A branch can exist on both GitHub and locally.

What is the benefit of having a copy of the last known state of the remote stored locally?

It allows a local user to realize when the local copy has been modified and possible needs to be pushed to the remote copy.

Commands:

git clone **html/path**     Clone a git repository.  Make a copy
git remote -v     Print the path names for the push and pull locations
git push origin master     Push changes made locally to the GitHub
git diff     Show changes to the repository not committed or staged
git status    Show status of commits, used to show chili recipe local is on commit ahead of the one on GitHub
git fetch     
git pull origin master = git fetch origin + git merge master origin/master
git pull requests     
git branch different-oil     Create a new branch for a suggested change
git checkout different-oil     Checkout the new branch
git add cake-recipe.txt     Add the changes to the pending folder
git commit     Commit the change to the repository
git push origin different-oil     Push the new branch to GitHub